const Discord = require('discord.js');
const client = new Discord.Client();
const prefix = "!";

client.on('ready', () => {
console.log('–ó–∞–ø—É—â–µ–Ω, —Å—ç—Ä!');
client.user.setPresence({
       status: "online",
       game: {
           name: "—Ç–≤–æ–∏ –Ω–µ—Ä–≤—ã",
           url: "https://www.youtube.com/watch?v=qrohU75OdJ8",
           type: "STREAMING"
       }
   })
});

client.on('message', (receivedMessage) => {
    if (receivedMessage.author == client.user) {
        return
    }
    if (receivedMessage.content.indexOf(prefix) == 0) {
    receivedMessage.react(client.emojis.get("554122910584012800"))
    }
});

client.on('message', message => {
  if (message.content === prefix + '–ª–∞–≤') {
  message.author.sendMessage("–Ø –ª—é–±–ª—é —Ç–µ–±—è ‚ô•");
  message.delete(1);
  }
});

client.on('message', message => {
    if (message.content === prefix + '–ø–∏–Ω–≥') {
    message.reply('–¥–∞ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —É —Ç–µ–±—è –ø–∏–Ω–≥ `' + `${message.createdTimestamp - Date.now()}` + '` –º/—Å, —É—Å–ø–æ–∫–æ–π—Å—è');
  	}
});

client.on('message', message => {
    let msg = message.content.toUpperCase();
    let sender = message.author; 
    let cont = message.content.slice(prefix.length).split(" "); 
    let args = cont.slice(1); 
    let member = message.mentions.members.first() || message.guild.members.get(args[0]);   
if (msg.startsWith(prefix + '–£–î–ê–õ–ò–¢–¨')) {
    async function purge() {
       if (!message.member.roles.get("537700464888643595")) {
                message.reply('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. :—Å'); 
                return; 
       }
       if (isNaN(args[0])) {
                message.reply('–ê —Å–∫–æ–ª—å–∫–æ —É–¥–∞–ª—è—Ç—å —Ç–æ? \n –ù–∞–ø–∏—à–∏: `' + prefix + '—É–¥–∞–ª–∏—Ç—å <—á–∏—Å–ª–æ>`');
                return;
       }
       if ((args[0]) >= 100) {
                message.reply('–ë–æ–ª—å—à–µ 100 –∑–∞ —Ä–∞–∑ –Ω–µ –º–æ–≥—É ;—Å');
                return;
       }
     const fetched = await message.channel.fetchMessages({limit: args[0]});
     console.log(fetched.size + ' —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã, —É–¥–∞–ª–µ–Ω–∏–µ...'); 
     message.reply('—É–¥–∞–ª–µ–Ω–æ `' + fetched.size + '` —Å–æ–æ–±—â–µ–Ω–∏–π');       
           
     message.channel.bulkDelete(fetched)
     .catch(error => message.channel.send(`Error: ${error}`));   
 }
  purge();
 }  
       
if (msg.startsWith(prefix + '–û–ß–ò–°–¢–ò–¢–¨')) {
    async function deleite() {
       if (!message.member.roles.get("537700464888643595")) {
                message.reply('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. :—Å'); 
                return; 
       }
       if (isNaN(args[1])) {
                message.reply('–ê —Å–∫–æ–ª—å–∫–æ —É–¥–∞–ª—è—Ç—å —Ç–æ? \n –ù–∞–ø–∏—à–∏: `' + prefix + '–æ—á–∏—Å—Ç–∏—Ç—å <@–Ω–∏–∫> <—á–∏—Å–ª–æ>`');
                return;
       }
       if ((args[1]) >= 100) {
                message.reply('–ë–æ–ª—å—à–µ 100 –∑–∞ —Ä–∞–∑ –Ω–µ –º–æ–≥—É ;—Å');
                return;
       }
     const fetched = await message.channel.fetchMessages({limit: args[0]})
     console.log(fetched.size + ' —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã, —É–¥–∞–ª–µ–Ω–∏–µ...'); 
     message.reply('—É–¥–∞–ª–µ–Ω–æ `' + fetched.size + '` —Å–æ–æ–±—â–µ–Ω–∏–π ' + member);       
           
     message.channel.bulkDelete(fetched)
     .catch(error => message.channel.send(`Error: ${error}`));   
 }
  deleite();
 }             
       
});

const { RichEmbed } = require('discord.js');
const { prefix } = "!";

exports.run = async (client, message, args) => {

    await message.delete().catch(O_o=>{});

    const a = message.guild.roles.get('537706487842340865'); // dota
    const b = message.guild.roles.get('537706608105619457'); // Gmod
    const c = message.guild.roles.get('537706571015258156'); // Eve

    const filter = (reaction, user) => ['üá¶', 'üáß', 'üá®'].includes(reaction.emoji.name) && user.id === message.author.id;

    const embed = new RichEmbed()
        .setTitle('Avaiilable Roles')
        .setDescription(`
        
        üá¶ ${a.toString()}
        üáß ${b.toString()}
        üá® ${c.toString()}
        `)
        .setColor(0xdd9323)
        .setFooter(`ID: ${message.author.id}`);
        
    message.channel.send(embed).then(async msg => {

        await msg.react('D');
        await msg.react('G');
        await msg.react('E');

        msg.awaitReactions(filter, {
            max: 1,
            time: 30000,
            errors: ['time']
        }).then(collected => {

            const reaction = collected.first();

            switch (reaction.emoji.name) {
                case 'üá¶':
                    if (message.member.roles.has(a.id)) {
                        msg.delete(2000);
                        return message.channel.send('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª—é—á!').then(m => m.delete(3000));
                    }
                    message.member.addRole(a).catch(err => {
                        console.log(err);
                        return message.channel.send(`Error adding you to this role: **${err.message}**.`);
                    });
                    message.channel.send(`–í–∞–º –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∫–ª—é—á: **${a.name}** !`).then(m => m.delete(3000));
                    msg.delete();
                    break;
                case 'üáß':
                    if (message.member.roles.has(b.id)) {
                        msg.delete(2000);
                        return message.channel.send('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª—é—á!').then(m => m.delete(3000));
                    }
                    message.member.addRole(b).catch(err => {
                        console.log(err);
                        return message.channel.send(`Error adding you to this role: **${err.message}**.`);
                    });
                    message.channel.send(`–í–∞–º –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∫–ª—é—á **${b.name}** !`).then(m => m.delete(3000));
                    msg.delete();
                    break;
                case 'üá®':
                    if (message.member.roles.has(c.id)) {
                        msg.delete(2000);
                        return message.channel.send('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª—é—á!').then(m => m.delete(3000));
                    }
                    message.member.addRole(c).catch(err => {
                        console.log(err);
                        return message.channel.send(`Error adding you to this role: **${err.message}**.`);
                    });
                    message.channel.send(`–í–∞–º –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∫–ª—é—á **${c.name}** !`).then(m => m.delete(3000));
                    msg.delete();
                    break;
            }
        }).catch(collected => {
            return message.channel.send(`–Ø –Ω–µ —Å–º–æ–≥ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º —Ä–æ–ª—å`);
        });

    });

};

exports.help = {
    name: 'roles'
};

// THIS  MUST  BE  THIS  WAY
client.login(process.env.BOT_TOKEN); 
